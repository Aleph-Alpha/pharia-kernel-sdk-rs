[workspace]
members = [
    "examples/*",
    "pharia-skill",
    "pharia-skill-macros",
    "pharia-skill-test",
]
resolver = "2"

[workspace.package]
authors = [
    "Markus Klein <markus.klein@aleph-alpha.com>",
    "Ben Brandt <benjamin.brandt@aleph-alpha.com>",
    "Moritz Althaus <moritz.althaus@aleph-alpha.com>",
    "Jia Ho Lee <jiaho.lee@aleph-alpha.com>",
    "Daniel Tscherwinka <daniel.tscherwinka@aleph-alpha.com>",
    "Peter Barth <peter.barth@aleph-alpha.com>",
]
edition = "2021"
repository = "https://github.com/Aleph-Alpha/pharia-kernel-sdk-rs"
readme = "README.md"
categories = ["API bindings"]
keywords = ["ai", "llm", "skill"]
version = "0.3.0"

[workspace.dependencies]
pharia-skill = { path = "./pharia-skill", registry = "jfrog", version = "0.3.0" }
pharia-skill-macros = { path = "./pharia-skill-macros", registry = "jfrog", version = "0.3.0" }
pharia-skill-test = { path = "./pharia-skill-test", registry = "jfrog", version = "0.3.0" }

anyhow = "^1.0.93"
dotenvy = "0.15"
quote = "^1.0.35"
serde = { version = "^1.0.215", features = ["derive"] }
serde_json = "^1.0.133"
strum = { version = "0.26", features = ["derive"] }
syn = { version = "^2.0.87", features = ["full"] }
ureq = { version = "^2.8", features = ["json"] }
wit-bindgen = "0.34"

[workspace.lints.rust]
future-incompatible = "warn"
keyword-idents = "warn"
let-underscore = "warn"
nonstandard-style = "warn"
refining-impl-trait = "warn"
rust-2018-idioms = "warn"
rust-2024-compatibility = "warn"
unused = { level = "warn", priority = -1 }

[workspace.lints.clippy]
# cargo = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
module-name-repetitions = "allow"
needless-pass-by-value = "allow"
