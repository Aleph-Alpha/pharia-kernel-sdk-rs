[workspace]
members = [
    "examples/*",
    "pharia-skill",
    "pharia-skill-macros",
    "pharia-skill-test",
]
resolver = "2"

[workspace.package]
authors = [
    "Markus Klein <markus.klein@aleph-alpha.com>",
    "Ben Brandt <benjamin.brandt@aleph-alpha.com>",
    "Moritz Althaus <moritz.althaus@aleph-alpha.com>",
    "Jia Ho Lee <jiaho.lee@aleph-alpha.com>",
]
edition = "2021"
repository = "https://github.com/Aleph-Alpha/pharia-kernel-sdk-rs"
readme = "README.md"
categories = ["api-bindings"]
keywords = ["ai", "llm", "skill"]
version = "0.6.1"
license = "Apache-2.0"
rust-version = "1.82.0"

[workspace.dependencies]
pharia-skill = { path = "./pharia-skill", registry = "jfrog", version = "0.6.1" }
pharia-skill-macros = { path = "./pharia-skill-macros", registry = "jfrog", version = "0.6.1" }
pharia-skill-test = { path = "./pharia-skill-test", registry = "jfrog", version = "0.6.1" }

anyhow = "1.0.97"
dotenvy = "0.15"
jiff = { version = "0.2.5", features = ["serde"] }
jsonschema = "0.29.0"
quote = "1.0.40"
proc-macro2 = "1.0.94"
schemars = "0.8.22"
serde = { version = "1.0.219", features = ["derive"] }
serde-bool = "0.1.3"
serde_json = "1.0.140"
strum = { version = "0.26", features = ["derive"] }
syn = { version = "2.0.100", features = ["full"] }
ureq = { version = "2.12", features = ["json"] }
wit-bindgen = "0.37"

[workspace.lints.rust]
future-incompatible = "warn"
keyword-idents = "warn"
let-underscore = "warn"
nonstandard-style = "warn"
refining-impl-trait = "warn"
rust-2018-idioms = "warn"
rust-2024-compatibility = "warn"
unused = { level = "warn", priority = -1 }

[workspace.lints.clippy]
cargo = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
module-name-repetitions = "allow"
needless-pass-by-value = "allow"

[profile.release.hello-world]
codegen-units = 1
opt-level = "s"
debug = false
strip = true
lto = true
